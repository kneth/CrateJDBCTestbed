/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
    // implementation files('../../../Projects/crate-jdbc/build/libs/crate-jdbc-standalone-2.7.0-f2f040a.jar')
    // implementation files('../../../Projects/crate-jdbc/build/libs/crate-jdbc-standalone-2.7.0-.jar')
    // implementation files('../../../Downloads/crate-jdbc-standalone-2.7.0.jar')
    // implementation 'io.crate:crate-jdbc-standalone:unspecified'
    implementation 'org.postgresql:postgresql:42.7.4'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'cratejdbctestbed.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
